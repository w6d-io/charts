{{- $fullname := (include "ciops.names.fullname" .) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  {{- with .Values.global.annotations }}
  annotations:
  {{-   toYaml . | nindent 4 }}
  {{- end }}
  labels:
    {{- include "helper.labels.standard" . | nindent 4 }}
  name: {{ $fullname }}
spec:
  replicas: {{ .Values.controller.replicaCount }}
  selector:
    matchLabels:
      {{- include "helper.labels.matchLabels" . | nindent 6 }}
      component: controller
  {{- if .Values.controller.strategy }}
  strategy:
    {{- toYaml .Values.controller.strategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "helper.labels.matchLabels" . | nindent 8 }}
        component: controller
        {{- with .Values.global.podLabels }}
        {{-   toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.controller.podLabels }}
        {{-   toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- include "ciops.annotations.defaultContainer" . | nindent 8 -}}
        {{- include "ciops.annotations.standard" . | nindent 8 -}}
        {{- include "ciops.annotations.workload" . | nindent 8 -}}
        kubectl.kubernetes.io/default-container: {{ .Values.controller.defaultContainer }}
        prometheus.io/path: {{ .Values.global.metrics.path }}
        prometheus.io/port: {{ .Values.global.metrics.port | quote }}
        prometheus.io/scrape: "true"
        {{- with .Values.global.podAnnotations }}
        {{-   toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.controller.podAnnotations }}
        {{-   toYaml . | nindent 8 }}
        {{- end }}
        checksum/configmap: {{ include (print $.Template.BasePath "/controller/configmap.yaml") . | sha256sum }}
        checksum/defaultAction: {{ include (print $.Template.BasePath "/controller/default-actions.yaml") . | sha256sum }}
    spec:
      {{- with .Values.controller.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ciops.serviceAccountName" . }}
      automountServiceAccountToken: true
      {{- with .Values.controller.securityContext }}
      securityContext:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- $pullSecret := dict "images" (list .Values.image) "context" $ }}
      {{- include "helper.images.renderPullSecrets" $pullSecret | nindent 6}}
      containers:
      - image: {{ printf "%s:%s" "w6dio/ciops" (default .Chart.AppVersion .Values.image.tag) }}
        imagePullPolicy: {{ default "" .Values.image.pullPolicy | quote }}
        command:
        - /ciops
        args:
        - server
        {{- with .Values.controller.extraArgs }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        name: controller
        volumeMounts:
        - mountPath: /config/config.yaml
          name: cconfig
          subPath: config.yaml
        - mountPath: /config/extra
          name: config-extra
        env:
        - name: CONFIG
          value: /config/config.yaml
        - name: CIOPS_EXTRA_DEFAULTACTIONS
          value: /config/extra/default_actions.yaml
        - name: LOG_LEVEL
          value: "2"
        {{- with .Values.controller.extraEnv }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.controller.livenessProbe }}
        livenessProbe:
        {{ toYaml . | nindent 10 }}
      {{- end }}
        {{- with .Values.controller.readinessProbe }}
        readinessProbe:
        {{ toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.controller.resources }}
        resources:
        {{- toYaml . | nindent 10 }}
        {{- end }}
        ports:
          - containerPort: {{ .Values.global.metrics.port }}
            name: metrics
            protocol: TCP

      {{- with .Values.controller.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end}}
      {{- with .Values.controller.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
