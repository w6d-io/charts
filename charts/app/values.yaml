---
replicaCount: 1

## add revision in annotation to force restart on rollout
revision:
  enabled: false

image:
  repository: 'nginx'
  tag: 'alpine'

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podSecurityPolicy:
  enabled: false

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

networkPolicies: []
  # - name: allow-http # must respect the dns format
  #   types:
  #     - Ingress
  #     - Egress
  #   ingress:
  #   - from:
  #     - namespaceSelector:
  #         matchLabels:
  #           project: myproject
  #     ports:
  #     - protocol: TCP
  #       port: 8080
  #   egress:
  #   - to:
  #     - podSelector:
  #         matchLabels:
  #           app: redis
  #     ports:
  #     - protocol: TCP
  #       port: 6379

lifecycle:
  enabled: false

annotations: {}

podLabels: {}

initContainers: []

resources: {}
#  limits:
#    cpu: 100m
#    memory: 128Mi
#  requests:
#    cpu: 10m
#    memory: 128Mi

service:
  name: 'app'
  internalPort: 8080
  externalPort: 8080
  type: ClusterIP

externalsvc: {}

ingress:
  enabled: false
  host: ''
  path: /
  issuer: ''
  class: 'nginx'
  prefix: 'nginx.ingress.kubernetes.io'
  className: ''         # ingressClassName field https://kubernetes.github.io/ingress-nginx/#what-is-ingressclassname-field
  extraPaths: []

persistence: []
livenessProbe: {}
readinessProbe: {}

metrics:
  enabled: false
  path: '/metrics'
  port: 8080


configs: []
# - key: 'config.yaml'
#   value: |
#     ---
#     data: 'inconfig'
#   name: CONFIG
#   path: /data/cfg

secrets: []
#  - name: PASSWORD
#    value: 'my_password'
#    kind: 'env'
#    key: 'password'
#  - key: 'secret.yaml'
#    value: |
#      ---
#      secret:
#        address: https://localhost
#        password: XjXg2tCtYBDxBRze8Lqa
#    name: SECRET
#    kind: 'volume'

nodeSelector: {}

volumeMounts: {}
volumes: {}

mongodb:
  install: false

redis:
  install: false
