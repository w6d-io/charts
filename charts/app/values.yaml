---
replicaCount: 1

name: "-"

id: ""
namespace: ""

kind: ""

database:
  host: ""
  adminpassword: ""
  password: ""
  postgres_password: ""
  component: ""
  enabled: false

generateSecret:
  enabled: false

liquibase:
  enabled: false

strategy: {}
#  type: Recreate
# Rollout sample
# canary:
#   maxSurge: 3
#   maxUnavailable: 0
#   canaryService: app-canary
#   stableService: app
#   steps:
#     - setWeight: 50
#     - pause: {}

revision:
  enabled: false

image:
  repository: 'nginx'
  tag: 'alpine'

serviceAccount:
  create: true
  token: true
  annotations: {}

role:
  rules: null

podSecurityPolicy:
  enabled: false

podAnnotations: {}
podLabels: {}

defaultContainer: ""

lifecycle:
  enabled: false

resources: {}

service:
  name: "-"
  internalPort: 8080
  externalPort: 8080
  type: ClusterIP

externalsvc: {}

ingress:
  enabled: false
  host: ''
  path: /
  issuer: ''
  class: 'nginx'
  prefix: 'nginx.ingress.kubernetes.io'
  className: ''         # ingressClassName field https://kubernetes.github.io/ingress-nginx/#what-is-ingressclassname-field
  extraPaths: []
  annotations: {}
  secretName: ''

cert:
  enabled: false
  issuerRef:
    group: cert-manager.io
    kind: ClusterIssuer
    name: letsencrypt-prod
  secretName: ""
  dnsNames: []

metrics:
  enabled: false
  path: '/metrics'
  port: 8080

env: ""
extraEnv: ""

configs: []

secrets: []

nodeSelector: {}

volumeMounts: {}
volumes: {}

autoscaling:
  enabled: false

extraResources: ""

mongodb:
  install: false

redis:
  install: false

pdb:
  enabled: false

vault:
  enabled: true
  url: http://vault.vault:8200
  envFrom:
    enabled: false
    path: strada/data

linkerd:
  enabled: false

initContainers: []