{{- if .Values.liquibase.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "app.names.name" . }}-db-init
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
  annotations:
    {{- include "app.annotations.standard" . | nindent 4 }}
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  #  ttlSecondsAfterFinished: 5
  backoffLimit: 0
  completions: 1
  parallelism: 1
  template:
    metadata:
      labels:
        {{- include "common.labels.standard" . | nindent 8 }}
    spec:
      restartPolicy: Never
      containers:
        - name: init-db
          env:
            - name: db_host
              value: {{ .Values.database.host | quote }}
            - name: db_name
              value: {{ .Values.database.name | quote }}
            - name: db_username
              value: {{ .Values.database.username | default "postgres" | quote }}
            - name: db_password
              valueFrom:
                secretKeyRef:
                  key: application-password
                  name: {{ printf "%s-init" .Release.Name }}
            - name: db_admin_username
              value: {{ .Values.database.adminuser | quote }}
            - name: db_admin_password
              valueFrom:
                secretKeyRef:
                  key: dlm-postgres-password
                  name: {{ printf "%s-init" .Release.Name }}
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  key: postgres-password
                  name: {{ printf "%s-init" .Release.Name }}
            - name: component
              value: {{ include "app.component" . }}
            - name: namespace
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: release
              value: {{ .Release.Name }}
          image: "w6dio/liquibase:v0.2.0"
          command: ['/bin/bash', '/scripts/initdb']
          volumeMounts:
            - name: sql
              mountPath: /sql
            - name: scripts
              mountPath: /scripts
      volumes:
        - name: scripts
          configMap:
            name: {{ include "app.names.name" . }}-dbscript
        - name: sql
          configMap:
            name: {{ include "app.names.name" . }}-sql
{{- end }}