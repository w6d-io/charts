image:
  repository: reg-ext.stradaworld.com/strada/stradaplatform/entityadminmodule/backend
  pullPolicy: IfNotPresent

global:
  id: "default-id"
  namespace: "apiea"
  database:
    host: "pg-stradatime-postgresql.postgresql-stradatime.svc.cluster.local"
    adminpassword: "admin"
    password: "admin"
    postgres_password: "admin"
    component: "apiea"
  domain:
    kafka: kafka.kafka
    auth0: 'https://strada-dev.eu.auth0.com/'
    s3: ""
    uam: ""
    tfds: ""
    tfd: ""
  app:
    serviceName: apiea
    servicePort: 8080
  generateSecret:
    enabled: false

nameOverride: apiea
fullnameOverride: apiea

liquibase:
  enabled: true
  env: |-
    - name: DB_DATABASE
      value: {{ include "global.database.database" . | quote }}
    - name: DB_HOST
      value: {{ include "global.database.host" .  | quote }}
    - name: DB_PORT
      value: "5432"
    - name: DB_USERNAME
      value: {{ include "global.database.adminuser" . | quote }}
    - name: DB_PASSWORD
      valueFrom:
        secretKeyRef:
          key: dlm-postgres-password
          name: {{ include "common.names.fullname" $ }}
    - name: DB_VERSION
      value: {{ (coalesce .Values.dbversion .Values.version .Chart.AppVersion) | quote }}
  resources: {}
  command:
    - bash
    - -c
    - |
      set -e
      cd /db
      if [ -z "${DB_VERSION}" ]
      then
        liquibase --url jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_DATABASE} \
            --username ${DB_USERNAME} \
            --password ${DB_PASSWORD} \
            update
      else
          liquibase --url jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_DATABASE} \
            --username ${DB_USERNAME} \
            --password ${DB_PASSWORD} \
              update-to-tag ${DB_VERSION}
      fi

replicaCount: 1

stradaBasic:
  username: "stradabasic"
  password: null

serviceAccount:
  create: true
  annotations: {}
  name: ""

podLabels:
  createdfor: strada
  app_group: "SWA"
  app_name: "entity-admin"

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

service:
  name: apiea
  type: ClusterIP
  internalPort: 80
  externalPort: 8080

env: |
  - name: PG_HOST
    value: {{ include "global.database.host" .  | quote }}
  - name: PG_DATABASE
    value: {{ include "global.database.database" . | quote }}
  - name: PG_USERNAME
    value: {{ include "global.database.username" . | quote }}
  - name: PG_PORT
    value: "5432"
  - name: AUTH0_DOMAIN
    value: {{ required "global.domain.auth0 is required" (include "global.domain.auth0" .) | quote }}
  - name: 'AUTH0_AUDIENCES'
    value: 'Strada.World.Admin,Strada.Admin.Entity,Strada.Tracking.Api,Strada.Admin.UsersAccess,Strada.Admin.Company,wCJAY1jyxVfUsyqefo2bZSYOWOAMuQHY,bi2IkbUWb7S5EkeU67zpg7k4RfJMjbKC,fQSmHjFpMlf95LhsRt4nvCB4BrtHgqCD,Strada.Admin.TenantManagement.Api,yYfesgRVSh84glAP7uKQWf5yHUZ4AqxU,Strada.Admin.License,CMoDr4g1rQBZacQxiciFpdi2lW5b5mRH'
  - name: STRADA_BASIC_USER
    value: {{ .Values.stradaBasic.username }}
  - name: Bus__SB_Server
    value: {{ include "global.kafka" . | quote }}
  - name: Bus__SB_SubName
    value: 'Strada.Admin.Entity.Api'
  - name: SERILOG__MIN_LEVEL
    value: 'information'
  - name: SERILOG__JSON_OUTPUT
    value: 'true'
  - name: PROMETHEUS__PORT
    value: '9187'
  - name: PROMETHEUS__GROUP
    value: 'SWA'
  - name: PG_PASSWORD
    valueFrom:
      secretKeyRef:
        key: postgres-password
        name: {{ include "common.names.fullname" . }}  
#  - name: Tenant__Namespace
#    value: {{ include "global.subdomain" . | quote }}
#  - name: Tenant__Namespace
#    value: {{ include "global.subdomain" . | quote }}
#  - name: GLOBAL_LABEL_TENANT
#    value: {{ .Values.global.label | quote }}
#  - name: GLOBAL_ID_TENANT
#    value: {{ .Values.global.id_tenant | quote }}
#  - name: GLOBAL_ID_ORGANISATION
#    value: {{ .Values.global.id_organisation | quote }}
#  - name: GLOBAL_NAMESPACE_TENANT
#    value: {{ .Values.global.namespace | quote }}
#  - name: DOTNET_USE_POLLING_FILE_WATCHER
#    value: 'false'

ingress:
  enabled: true
  path: /
  annotations:
    nginx.ingress.kubernetes.io/enable-cors: "true"
  host: 'apiea.dev.stradatms.net'
  className: 'ing-strada'

metrics:
  enabled: true
  path: '/metrics'
  port: 9187

resources:
  limits:
    cpu: 100m
    memory: 512Mi
  requests:
    cpu: 60m
    memory: 256Mi

livenessProbe: {}
readinessProbe: {}

nodeSelector: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80