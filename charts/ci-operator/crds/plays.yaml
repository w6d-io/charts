apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (devel)
  creationTimestamp: null
  name: plays.ci.w6d.io
spec:
  group: ci.w6d.io
  names:
    kind: Play
    listKind: PlayList
    plural: plays
    singular: play
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.state
          name: State
          type: string
        - jsonPath: .status.pipeline_run_name
          name: PipelineRun
          priority: 1
          type: string
        - jsonPath: .status.message
          name: Message
          priority: 1
          type: string
        - description: CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Play is the Schema for the plays API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: PlaySpec defines the desired state of Play
              properties:
                commit:
                  description: Commit contains all git information
                  properties:
                    message:
                      description: Message contains commit message
                      type: string
                    ref:
                      description: Ref contains git commit reference
                      type: string
                    sha:
                      description: SHA contains git commit SHA
                      type: string
                  type: object
                dependencies:
                  additionalProperties:
                    description: Dependency struct contains env and service for the dependencies
                    properties:
                      services:
                        description: Services contain a list of host and port to expose
                        items:
                          additionalProperties:
                            type: string
                          description: Service struct for dependencies
                          type: object
                        type: array
                      variables:
                        additionalProperties:
                          type: string
                        description: Env is environmental variable for this dependency
                        type: object
                    type: object
                  description: 'Dependencies contains a list of Dependency ie: MongoDb or PostgreSQL'
                  type: object
                docker_url:
                  description: DockerURL contains the registry name and tag where to push docker image
                  type: string
                domain:
                  description: Domain contains the url for exposition
                  #pattern: ^([A-Za-z0â€“9\-\.]+)+([A-Za-z0-9\.]+)*\.[A-Za-z][A-Za-z]+$
                  type: string
                expose:
                  description: Expose toggles the creation of the ingress in case of
                    deployment
                  type: boolean
                environment:
                  description: Environment contains application environment
                  type: string
                name:
                  description: Name of project
                  type: string
                pipeline_id:
                  description: PipelineID contains the ID of pipeline for the project
                  format: int64
                  type: integer
                project_id:
                  description: ProjectID contains the project ID
                  format: int64
                  type: integer
                repo_url:
                  description: RepoURL contains the git repository url
                  type: string
                scope:
                  description: Scope contains the name of scope and list of projects id
                  properties:
                    name:
                      description: Name of the scope
                      type: string
                    projects:
                      description: Projects is the list of project id in this scope
                      format: int64
                      type: integer
                  type: object
                secret:
                  additionalProperties:
                    type: string
                  description: Secret contains the secret data. Each key must be either - git_token - .dockerconfigjson - sonar_token
                  type: object
                stack:
                  description: Stack of the project
                  properties:
                    language:
                      description: Language contains the repository language
                      type: string
                    package:
                      description: Package contains the package use in application
                      type: string
                  type: object
                tasks:
                  description: Tasks contains the list of task to be created by Play
                  items:
                    additionalProperties:
                      description: Task is what actions and/or configuration the task can be contains
                      properties:
                        docker:
                          description: Docker contains information for docker build
                          properties:
                            context:
                              description: Context contains the docker build context
                              type: string
                            filepath:
                              description: Filepath contains the dockerfile full path
                              type: string
                          type: object
                        image:
                          description: Image to use for this task
                          type: string
                        script:
                          description: Script is a list of command to execute in the task
                          items:
                            type: string
                          type: array
                        variables:
                          additionalProperties:
                            type: string
                          description: Env is the map of environment variable for the task
                          type: object
                      type: object
                    type: object
                  type: array
              type: object
            status:
              description: PlayStatus defines the observed state of Play
              properties:
                message:
                  description: Message contains the pipeline message
                  type: string
                pipeline_run_name:
                  description: PipelineRunName contains the pipeline run name created by play
                  type: string
                state:
                  description: State contains the current state of this Play resource. States Running, Failed, Succeeded, Errored
                  type: string
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
